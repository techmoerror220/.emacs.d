;;-*-coding: utf-8;-*-
(define-abbrev-table 'Rd-mode-abbrev-table
  '(
    ("`ag" "\\arguments" nil :count 0)
    ("`al" "\\alias" nil :count 0)
    ("`au" "\\author" nil :count 0)
    ("`bf" "\\bold" nil :count 0)
    ("`co" "\\code" nil :count 0)
    ("`de" "\\describe" nil :count 0)
    ("`dn" "\\description" nil :count 0)
    ("`dt" "\\details" nil :count 0)
    ("`em" "\\emph" nil :count 0)
    ("`en" "\\enumerate" nil :count 0)
    ("`ex" "\\examples" nil :count 0)
    ("`fi" "\\file" nil :count 0)
    ("`fo" "\\format" nil :count 0)
    ("`it" "\\item" nil :count 0)
    ("`iz" "\\itemize" nil :count 0)
    ("`kw" "\\keyword" nil :count 0)
    ("`li" "\\link" nil :count 0)
    ("`me" "\\method" nil :count 0)
    ("`na" "\\name" nil :count 0)
    ("`no" "\\note" nil :count 0)
    ("`re" "\\references" nil :count 0)
    ("`sa" "\\seealso" nil :count 0)
    ("`se" "\\section" nil :count 0)
    ("`so" "\\source" nil :count 0)
    ("`ss" "\\subsection" nil :count 0)
    ("`sy" "\\synopsis" nil :count 0)
    ("`ta" "\\tabular" nil :count 0)
    ("`ti" "\\title" nil :count 0)
    ("`us" "\\usage" nil :count 0)
    ("`va" "\\value" nil :count 0)
   ))

(define-abbrev-table 'global-abbrev-table
  '(
    ("abbout" "about" nil :count 0)
    ("abotu" "about" nil :count 0)
    ("abouta" "about a" nil :count 0)
    ("aboutit" "about it" nil :count 0)
    ("aboutthe" "about the" nil :count 0)
    ("abscence" "absence" nil :count 0)
    ("accesories" "accessories" nil :count 0)
    ("accidant" "accident" nil :count 0)
    ("accomodate" "accommodate" nil :count 0)
    ("accordingto" "according to" nil :count 0)
    ("accross" "across" nil :count 0)
    ("acheive" "achieve" nil :count 0)
    ("acheived" "achieved" nil :count 0)
    ("acheiving" "achieving" nil :count 0)
    ("acn" "can" nil :count 0)
    ("acommodate" "accommodate" nil :count 0)
    ("acomodate" "accommodate" nil :count 0)
    ("acomplished" "accomplished" nil :count 0)
    ("actualyl" "actually" nil :count 0)
    ("acurate" "accurate" nil :count 0)
    ("addictional" "additional" nil :count 0)
    ("additinal" "additional" nil :count 0)
    ("addtional" "additional" nil :count 0)
    ("addtions" "additions" nil :count 0)
    ("adequit" "adequate" nil :count 0)
    ("adequite" "adequate" nil :count 0)
    ("adn" "and" nil :count 0)
    ("advanage" "advantage" nil :count 0)
    ("affraid" "afraid" nil :count 0)
    ("afterthe" "after the" nil :count 0)
    ("aganist" "against" nil :count 0)
    ("aggresive" "aggressive" nil :count 0)
    ("agian" "again" nil :count 0)
    ("agreemeent" "agreement" nil :count 0)
    ("agreemeents" "agreements" nil :count 0)
    ("agreemnet" "agreement" nil :count 0)
    ("agreemnets" "agreements" nil :count 0)
    ("agressive" "aggressive" nil :count 0)
    ("ahppen" "happen" nil :count 0)
    ("ahve" "have" nil :count 0)
    ("allwasy" "always" nil :count 0)
    ("allwyas" "always" nil :count 0)
    ("almots" "almost" nil :count 0)
    ("almsot" "almost" nil :count 0)
    ("alomst" "almost" nil :count 0)
    ("alot" "a lot" nil :count 0)
    ("alraedy" "already" nil :count 0)
    ("alreayd" "already" nil :count 0)
    ("alreday" "already" nil :count 0)
    ("alwasy" "always" nil :count 0)
    ("alwats" "always" nil :count 0)
    ("alway" "always" nil :count 0)
    ("alwyas" "always" nil :count 0)
    ("amde" "made" nil :count 0)
    ("ameria" "America" nil :count 0)
    ("amke" "make" nil :count 0)
    ("amkes" "makes" nil :count 0)
    ("anbd" "and" nil :count 0)
    ("andone" "and one" nil :count 0)
    ("andt he" "and the" nil :count 0)
    ("andteh" "and the" nil :count 0)
    ("andthe" "and the" nil :count 0)
    ("anothe" "another" nil :count 0)
    ("anual" "annual" nil :count 0)
    ("apache" "Apache" nil :count 0)
    ("apparant" "apparent" nil :count 0)
    ("apparrent" "apparent" nil :count 0)
    ("appearence" "appearance" nil :count 0)
    ("appeares" "appears" nil :count 0)
    ("applicaiton" "application" nil :count 0)
    ("applicaitons" "applications" nil :count 0)
    ("applyed" "applied" nil :count 0)
    ("appointiment" "appointment" nil :count 0)
    ("approrpiate" "appropriate" nil :count 0)
    ("approrpriate" "appropriate" nil :count 0)
    ("aquisition" "acquisition" nil :count 0)
    ("aquisitions" "acquisitions" nil :count 0)
    ("arent" "aren't" nil :count 0)
    ("arguement" "argument" nil :count 0)
    ("arguements" "arguments" nil :count 0)
    ("arnt" "aren't" nil :count 0)
    ("arond" "around" nil :count 0)
    ("artical" "article" nil :count 0)
    ("articel" "article" nil :count 0)
    ("asdvertising" "advertising" nil :count 0)
    ("assistent" "assistant" nil :count 0)
    ("asthe" "as the" nil :count 0)
    ("atention" "attention" nil :count 0)
    ("atmospher" "atmosphere" nil :count 0)
    ("attentioin" "attention" nil :count 0)
    ("atthe" "at the" nil :count 0)
    ("audeince" "audience" nil :count 0)
    ("audiance" "audience" nil :count 0)
    ("authetication" "authentication" nil :count 0)
    ("availalbe" "available" nil :count 0)
    ("awya" "away" nil :count 0)
    ("aywa" "away" nil :count 0)
    ("bakc" "back" nil :count 0)
    ("balence" "balance" nil :count 0)
    ("ballance" "balance" nil :count 0)
    ("baout" "about" nil :count 0)
    ("bcak" "back" nil :count 0)
    ("beacause" "because" nil :count 0)
    ("beacuse" "because" nil :count 0)
    ("becasue" "because" nil :count 0)
    ("becaus" "because" nil :count 0)
    ("becausea" "because a" nil :count 0)
    ("becauseof" "because of" nil :count 0)
    ("becausethe" "because the" nil :count 0)
    ("becauseyou" "because you" nil :count 0)
    ("becomeing" "becoming" nil :count 0)
    ("becomming" "becoming" nil :count 0)
    ("becuase" "because" nil :count 0)
    ("becuse" "because" nil :count 0)
    ("befoer" "before" nil :count 0)
    ("beggining" "beginning" nil :count 0)
    ("begining" "beginning" nil :count 0)
    ("beginining" "beginning" nil :count 0)
    ("behabviour" "behaviour" nil :count 0)
    ("behaivior" "behaviour" nil :count 0)
    ("behavour" "behaviour" nil :count 0)
    ("beleiev" "believe" nil :count 0)
    ("beleieve" "believe" nil :count 0)
    ("beleif" "belief" nil :count 0)
    ("beleive" "believe" nil :count 0)
    ("beleived" "believed" nil :count 0)
    ("beleives" "believes" nil :count 0)
    ("beliefe" "belief" nil :count 0)
    ("beliveve" "believe" nil :count 0)
    ("benifit" "benefit" nil :count 0)
    ("benifits" "benefits" nil :count 0)
    ("betwen" "between" nil :count 0)
    ("beutiful" "beautiful" nil :count 0)
    ("blase" "blase" nil :count 0)
    ("boxs" "boxes" nil :count 0)
    ("brodcast" "broadcast" nil :count 0)
    ("butthe" "but the" nil :count 0)
    ("bve" "be" nil :count 0)
    ("cafe" "cafe" nil :count 0)
    ("caharcter" "character" nil :count 0)
    ("calcullated" "calculated" nil :count 0)
    ("calulated" "calculated" nil :count 0)
    ("candidtae" "candidate" nil :count 0)
    ("candidtaes" "candidates" nil :count 0)
    ("caontains" "contains" nil :count 0)
    ("capabilites" "capabilities" nil :count 0)
    ("catagory" "category" nil :count 0)
    ("categiory" "category" nil :count 0)
    ("certian" "certain" nil :count 0)
    ("challange" "challenge" nil :count 0)
    ("challanges" "challenges" nil :count 0)
    ("chaneg" "change" nil :count 0)
    ("chanegs" "changes" nil :count 0)
    ("changable" "changeable" nil :count 0)
    ("changeing" "changing" nil :count 0)
    ("changng" "changing" nil :count 0)
    ("charachter" "character" nil :count 0)
    ("charachters" "characters" nil :count 0)
    ("charactor" "character" nil :count 0)
    ("charecter" "character" nil :count 0)
    ("charector" "character" nil :count 0)
    ("cheif" "chief" nil :count 0)
    ("chekc" "check" nil :count 0)
    ("chnage" "change" nil :count 0)
    ("cieling" "ceiling" nil :count 0)
    ("circut" "circuit" nil :count 0)
    ("claer" "clear" nil :count 0)
    ("claered" "cleared" nil :count 0)
    ("claerly" "clearly" nil :count 0)
    ("cliant" "client" nil :count 0)
    ("cliche" "cliche" nil :count 0)
    ("cna" "can" nil :count 0)
    ("colection" "collection" nil :count 0)
    ("comanies" "companies" nil :count 0)
    ("comany" "company" nil :count 0)
    ("comapnies" "companies" nil :count 0)
    ("comapny" "company" nil :count 0)
    ("combintation" "combination" nil :count 0)
    ("comited" "committed" nil :count 0)
    ("comittee" "committee" nil :count 0)
    ("commadn" "command" nil :count 0)
    ("comming" "coming" nil :count 0)
    ("commitee" "committee" nil :count 0)
    ("committe" "committee" nil :count 0)
    ("committment" "commitment" nil :count 0)
    ("committments" "commitments" nil :count 0)
    ("committy" "committee" nil :count 0)
    ("comntain" "contain" nil :count 0)
    ("comntains" "contains" nil :count 0)
    ("compair" "compare" nil :count 0)
    ("compatable" "compatible" nil :count 0)
    ("compleated" "completed" nil :count 0)
    ("compleatly" "completely" nil :count 0)
    ("compleatness" "completeness" nil :count 0)
    ("completly" "completely" nil :count 0)
    ("completness" "completeness" nil :count 0)
    ("complteted" "completed" nil :count 0)
    ("composate" "composite" nil :count 0)
    ("compteted" "completed" nil :count 0)
    ("comtain" "contain" nil :count 0)
    ("comtains" "contains" nil :count 0)
    ("comunicate" "communicate" nil :count 0)
    ("comunity" "community" nil :count 0)
    ("condersider" "consider" nil :count 0)
    ("condolances" "condolences" nil :count 0)
    ("conected" "connected" nil :count 0)
    ("conferance" "conference" nil :count 0)
    ("configration" "configuration" nil :count 0)
    ("confirmmation" "confirmation" nil :count 0)
    ("conjuntion" "conjunction" nil :count 0)
    ("considerit" "considerate" nil :count 0)
    ("considerite" "considerate" nil :count 0)
    ("consistant" "consistent" nil :count 0)
    ("consonent" "consonant" nil :count 0)
    ("conspiricy" "conspiracy" nil :count 0)
    ("constuction" "construction" nil :count 0)
    ("consultent" "consultant" nil :count 0)
    ("consumeable" "consumable" nil :count 0)
    ("contitions" "conditions" nil :count 0)
    ("controlable" "controllable" nil :count 0)
    ("convertable" "convertible" nil :count 0)
    ("cooparate" "cooperate" nil :count 0)
    ("cooporate" "cooperate" nil :count 0)
    ("corproation" "corporation" nil :count 0)
    ("corproations" "corporations" nil :count 0)
    ("corrospond" "correspond" nil :count 0)
    ("corruptable" "corruptible" nil :count 0)
    ("cotten" "cotton" nil :count 0)
    ("coudl" "could" nil :count 0)
    ("coudln" "couldn" nil :count 0)
    ("coudn" "couldn" nil :count 0)
    ("couldnt" "couldn't" nil :count 0)
    ("couldthe" "could the" nil :count 0)
    ("cpoy" "copy" nil :count 0)
    ("creme" "creme" nil :count 0)
    ("ctaegory" "category" nil :count 0)
    ("cusotmer" "customer" nil :count 0)
    ("cusotmers" "customers" nil :count 0)
    ("cutsomer" "customer" nil :count 0)
    ("cutsomers" "customers" nil :count 0)
    ("cxan" "can" nil :count 0)
    ("danceing" "dancing" nil :count 0)
    ("dcument" "document" nil :count 0)
    ("deatils" "details" nil :count 0)
    ("decison" "decision" nil :count 0)
    ("decisons" "decisions" nil :count 0)
    ("decor" "decor" nil :count 0)
    ("defendent" "defendant" nil :count 0)
    ("definately" "definitely" nil :count 0)
    ("definded" "defined" nil :count 0)
    ("dependances" "dependencies" nil :count 0)
    ("deptartment" "department" nil :count 0)
    ("desicion" "decision" nil :count 0)
    ("desicions" "decisions" nil :count 0)
    ("desision" "decision" nil :count 0)
    ("desisions" "decisions" nil :count 0)
    ("detente" "detente" nil :count 0)
    ("determin" "determine" nil :count 0)
    ("determins" "determine" nil :count 0)
    ("develeoprs" "developers" nil :count 0)
    ("devellop" "develop" nil :count 0)
    ("develloped" "developed" nil :count 0)
    ("develloper" "developer" nil :count 0)
    ("devellopers" "developers" nil :count 0)
    ("develloping" "developing" nil :count 0)
    ("devellopment" "development" nil :count 0)
    ("devellopments" "developments" nil :count 0)
    ("devellops" "develop" nil :count 0)
    ("develope" "develop" nil :count 0)
    ("developement" "development" nil :count 0)
    ("developements" "developments" nil :count 0)
    ("developor" "developer" nil :count 0)
    ("developors" "developers" nil :count 0)
    ("develpment" "development" nil :count 0)
    ("devloped" "developed" nil :count 0)
    ("diaplay" "display" nil :count 0)
    ("didint" "didn't" nil :count 0)
    ("didnot" "did not" nil :count 0)
    ("didnt" "didn't" nil :count 0)
    ("difefrent" "different" nil :count 0)
    ("diferences" "differences" nil :count 0)
    ("differance" "difference" nil :count 0)
    ("differances" "differences" nil :count 0)
    ("differant" "different" nil :count 0)
    ("differemt" "different" nil :count 0)
    ("differnt" "different" nil :count 0)
    ("diffrent" "different" nil :count 0)
    ("directer" "director" nil :count 0)
    ("directers" "directors" nil :count 0)
    ("directiosn" "direction" nil :count 0)
    ("disatisfied" "dissatisfied" nil :count 0)
    ("discoverd" "discovered" nil :count 0)
    ("disign" "design" nil :count 0)
    ("dispaly" "display" nil :count 0)
    ("dissonent" "dissonant" nil :count 0)
    ("distribusion" "distribution" nil :count 0)
    ("distrubution" "distribution" nil :count 0)
    ("divsion" "division" nil :count 0)
    ("docuement" "documents" nil :count 0)
    ("docuemnt" "document" nil :count 0)
    ("documetn" "document" nil :count 0)
    ("documnet" "document" nil :count 0)
    ("documnets" "documents" nil :count 0)
    ("doese" "does" nil :count 0)
    ("doesnt" "doesn't" nil :count 0)
    ("doign" "doing" nil :count 0)
    ("doimg" "doing" nil :count 0)
    ("doind" "doing" nil :count 0)
    ("dollers" "dollars" nil :count 0)
    ("donig" "doing" nil :count 0)
    ("dont" "don't" nil :count 1)
    ("dosnt" "doesn't" nil :count 0)
    ("driveing" "driving" nil :count 0)
    ("drnik" "drink" nil :count 0)
    ("eclair" "eclair" nil :count 0)
    ("efel" "feel" nil :count 0)
    ("effecient" "efficient" nil :count 0)
    ("efort" "effort" nil :count 0)
    ("eforts" "efforts" nil :count 0)
    ("ehr" "her" nil :count 0)
    ("eligable" "eligible" nil :count 0)
    ("emacs" "Emacs" nil :count 4)
    ("embarass" "embarrass" nil :count 0)
    ("emigre" "emigre" nil :count 0)
    ("enahancements" "enhancements" nil :count 0)
    ("english" "English" nil :count 0)
    ("enought" "enough" nil :count 0)
    ("entree" "entree" nil :count 0)
    ("equippment" "equipment" nil :count 0)
    ("equivalant" "equivalent" nil :count 0)
    ("esle" "else" nil :count 0)
    ("especally" "especially" nil :count 0)
    ("especialyl" "especially" nil :count 0)
    ("espesially" "especially" nil :count 0)
    ("excellant" "excellent" nil :count 0)
    ("excercise" "exercise" nil :count 0)
    ("exchagne" "exchange" nil :count 0)
    ("exchagnes" "exchanges" nil :count 0)
    ("excitment" "excitement" nil :count 0)
    ("exhcange" "exchange" nil :count 0)
    ("exhcanges" "exchanges" nil :count 0)
    ("experiance" "experience" nil :count 0)
    ("experienc" "experience" nil :count 0)
    ("exprience" "experience" nil :count 0)
    ("exprienced" "experienced" nil :count 0)
    ("eyt" "yet" nil :count 0)
    ("facade" "facade" nil :count 0)
    ("faeture" "feature" nil :count 0)
    ("faetures" "features" nil :count 0)
    ("familair" "familiar" nil :count 0)
    ("familar" "familiar" nil :count 0)
    ("familliar" "familiar" nil :count 0)
    ("fammiliar" "familiar" nil :count 0)
    ("feild" "field" nil :count 0)
    ("feilds" "fields" nil :count 0)
    ("fianlly" "finally" nil :count 0)
    ("fidn" "find" nil :count 0)
    ("fifith" "fifth" nil :count 0)
    ("finalyl" "finally" nil :count 0)
    ("finnally" "finally" nil :count 0)
    ("finnish" "finish" nil :count 0)
    ("firends" "friends" nil :count 0)
    ("firts" "first" nil :count 0)
    ("fixit" "fix it" nil :count 0)
    ("follwo" "follow" nil :count 0)
    ("follwoing" "following" nil :count 0)
    ("foloowing" "following" nil :count 0)
    ("fora" "for a" nil :count 0)
    ("foriegn" "foreign" nil :count 0)
    ("forthe" "for the" nil :count 0)
    ("forwrd" "forward" nil :count 0)
    ("forwrds" "forwards" nil :count 0)
    ("foudn" "found" nil :count 0)
    ("foward" "forward" nil :count 0)
    ("fowards" "forwards" nil :count 0)
    ("freind" "friend" nil :count 0)
    ("freindly" "friendly" nil :count 0)
    ("freinds" "friends" nil :count 0)
    ("frmo" "from" nil :count 0)
    ("fromt he" "from the" nil :count 0)
    ("fromthe" "from the" nil :count 0)
    ("furneral" "funeral" nil :count 0)
    ("fwe" "few" nil :count 0)
    ("garantee" "guarantee" nil :count 0)
    ("gaurd" "guard" nil :count 0)
    ("gemeral" "general" nil :count 0)
    ("gerat" "great" nil :count 0)
    ("gerneral" "general" nil :count 0)
    ("geting" "getting" nil :count 0)
    ("gettin" "getting" nil :count 0)
    ("gievn" "given" nil :count 0)
    ("giveing" "giving" nil :count 0)
    ("gloabl" "global" nil :count 0)
    ("goign" "going" nil :count 0)
    ("gonig" "going" nil :count 0)
    ("govenment" "government" nil :count 0)
    ("goverment" "government" nil :count 0)
    ("gruop" "group" nil :count 0)
    ("gruops" "groups" nil :count 0)
    ("grwo" "grow" nil :count 0)
    ("guidlines" "guidelines" nil :count 0)
    ("hadbeen" "had been" nil :count 0)
    ("hadnt" "hadn't" nil :count 0)
    ("haev" "have" nil :count 0)
    ("hapen" "happen" nil :count 0)
    ("hapened" "happened" nil :count 0)
    ("hapening" "happening" nil :count 0)
    ("hapens" "happens" nil :count 0)
    ("happend" "happened" nil :count 0)
    ("hasbeen" "has been" nil :count 0)
    ("hasnt" "hasn't" nil :count 0)
    ("havebeen" "have been" nil :count 0)
    ("haveing" "having" nil :count 0)
    ("haven;t" "haven't" nil :count 0)
    ("hda" "had" nil :count 0)
    ("hearign" "hearing" nil :count 0)
    ("heire" "he-ire" nil :count 0)
    ("helpdesk" "help-desk" nil :count 0)
    ("helpfull" "helpful" nil :count 0)
    ("herat" "heart" nil :count 0)
    ("hesaid" "he said" nil :count 0)
    ("hewas" "he was" nil :count 0)
    ("hge" "he" nil :count 0)
    ("hier" "heir" nil :count 0)
    ("hismelf" "himself" nil :count 0)
    ("hiten" "hitting" nil :count 0)
    ("hitten" "hitting" nil :count 0)
    ("hlep" "help" nil :count 0)
    ("howerver" "however" nil :count 0)
    ("hsa" "has" nil :count 0)
    ("hsi" "his" nil :count 0)
    ("hte" "the" nil :count 0)
    ("htere" "there" nil :count 0)
    ("htese" "these" nil :count 0)
    ("htey" "they" nil :count 0)
    ("hting" "thing" nil :count 0)
    ("htink" "think" nil :count 0)
    ("htis" "this" nil :count 0)
    ("htp:" "http:" nil :count 0)
    ("ldtos" "ldots" nil :count 1)
    ("resutlados" "resultados" nil :count 1)
    ("valro" "valor" nil :count 1)
    ("wtih" "with" nil :count 1)
   ))

