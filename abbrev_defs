;;-*-coding: utf-8;-*-
(define-abbrev-table 'Rd-mode-abbrev-table
  '(
    ("`ag" "\\arguments" nil :count 0)
    ("`al" "\\alias" nil :count 0)
    ("`au" "\\author" nil :count 0)
    ("`bf" "\\bold" nil :count 0)
    ("`co" "\\code" nil :count 0)
    ("`de" "\\describe" nil :count 0)
    ("`dn" "\\description" nil :count 0)
    ("`dt" "\\details" nil :count 0)
    ("`em" "\\emph" nil :count 0)
    ("`en" "\\enumerate" nil :count 0)
    ("`ex" "\\examples" nil :count 0)
    ("`fi" "\\file" nil :count 0)
    ("`fo" "\\format" nil :count 0)
    ("`it" "\\item" nil :count 0)
    ("`iz" "\\itemize" nil :count 0)
    ("`kw" "\\keyword" nil :count 0)
    ("`li" "\\link" nil :count 0)
    ("`me" "\\method" nil :count 0)
    ("`na" "\\name" nil :count 0)
    ("`no" "\\note" nil :count 0)
    ("`re" "\\references" nil :count 0)
    ("`sa" "\\seealso" nil :count 0)
    ("`se" "\\section" nil :count 0)
    ("`so" "\\source" nil :count 0)
    ("`ss" "\\subsection" nil :count 0)
    ("`sy" "\\synopsis" nil :count 0)
    ("`ta" "\\tabular" nil :count 0)
    ("`ti" "\\title" nil :count 0)
    ("`us" "\\usage" nil :count 0)
    ("`va" "\\value" nil :count 0)
   ))

(define-abbrev-table 'global-abbrev-table
  '(
    ("ab" "about" nil :count 3)
    ("adn" "and" nil :count 4)
    ("afaik" "as far as I know" nil :count 2)
    ("anotehr" "another" nil :count 1)
    ("aprovar" "aprobar" nil :count 2)
    ("arrangemetns" "arrangements" nil :count 1)
    ("aslo" "also" nil :count 1)
    ("bc" "because" nil :count 4)
    ("beleive" "believe" nil :count 1)
    ("bindign" "binding" nil :count 1)
    ("bry" "$\\bar{Y}$" nil :count 3)
    ("bt" "buenas tardes" nil :count 3)
    ("ce" "¿cómo estás?" nil :count 3)
    ("changnes" "changes" nil :count 1)
    ("chatper" "chapter" nil :count 1)
    ("condicioens" "condiciones" nil :count 1)
    ("dg" "Daniel Guinea" nil :count 7)
    ("dif-" "dif\\mbox{}ferences" nil :count 0)
    ("diferncia" "diferencia" nil :count 1)
    ("difff" "dif\\mbox{}ferences" nil :count 3)
    ("dn" "don't" nil :count 4)
    ("dvt" "development" nil :count 3)
    ("eg" "e.g.," nil :count 4)
    ("eleminar" "eliminar" nil :count 1)
    ("esle" "else" nil :count 1)
    ("fm" "furthermore" nil :count 3)
    ("fo" "of" nil :count 2)
    ("ft" "furthermore" nil :count 1)
    ("fx" "for example" nil :count 3)
    ("g" "go" nil :count 6)
    ("gvt" "government" nil :count 4)
    ("h0" "$H_0$" nil :count 6)
    ("h1" "$H_1$" nil :count 1)
    ("ho" "hola" nil :count 11)
    ("hte" "the" nil :count 3)
    ("hv" "have" nil :count 1)
    ("ie" "i.e.," nil :count 6)
    ("incertiducmbre" "incertidumbre" nil :count 1)
    ("inf" "\\infty" nil :count 1)
    ("iwth" "with" nil :count 1)
    ("iwthout" "without" nil :count 1)
    ("k" "the" nil :count 14)
    ("levls" "levels" nil :count 1)
    ("lk" "like" nil :count 2)
    ("lw" "likewise" nil :count 1)
    ("mb" "\\mbox{}" nil :count 3)
    ("measuremetn" "measurement" nil :count 1)
    ("misam" "misma" nil :count 1)
    ("mo" "moreover" nil :count 5)
    ("nonnomral" "nonnormal" nil :count 1)
    ("ot" "to" nil :count 1)
    ("porqeu" "porque" nil :count 1)
    ("poryectos" "proyectos" nil :count 1)
    ("pregutna" "pregunta" nil :count 2)
    ("prhase" "phrase" nil :count 1)
    ("prob" "probability" nil :count 1)
    ("qeu" "que" nil :count 2)
    ("qt" "¿qué tal?" nil :count 2)
    ("recieve" "receive" nil :count 1)
    ("rign" "ring" nil :count 1)
    ("rihgt" "right" nil :count 1)
    ("sa" "as" nil :count 1)
    ("sampel" "sample" nil :count 1)
    ("studeis" "studies" nil :count 1)
    ("ta" "that" nil :count 4)
    ("taht" "that" nil :count 1)
    ("tb" "también" nil :count 2)
    ("td" "today" nil :count 2)
    ("teh" "the" nil :count 20)
    ("tg" "thing" nil :count 4)
    ("tihs" "this" nil :count 1)
    ("tm" "tomorrow" nil :count 2)
    ("twimc" "To whom it may concern," nil :count 3)
    ("uab" "un abrazo," nil :count 8)
    ("usal" "un saludo," nil :count 6)
    ("vlaue" "value" nil :count 1)
    ("wd" "would" nil :count 1)
    ("wdn" "wouldn't" nil :count 1)
    ("wo" "without" nil :count 2)
    ("woudl" "would" nil :count 1)
    ("yuo" "you" nil :count 2)
   ))

