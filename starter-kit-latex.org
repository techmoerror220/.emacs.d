#+TITLE: Starter Kit LaTeX
#+OPTIONS: toc:nil H:2 num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter Kit LaTeX
  Support for editing LaTeX.

** Color Theme Tweaks
The theme package is loaded in =starter-kit-misc.org=. The settings
here adjust the height of some headings in Org and LaTeX mode, as well
as turning off the sans-serif heading style that AucTeX defaults to.

#+srcname: local-settings
#+begin_src emacs-lisp :tangle yes
  (add-hook 'latex-mode-hook
            (lambda ()
              (set-face-attribute 'font-latex-sectioning-5-face nil :inherit nil :foreground "#b58900")
              (set-face-attribute 'font-latex-sectioning-0-face nil :height 3)
              (set-face-attribute 'font-latex-sectioning-1-face nil :height 2)
              (set-face-attribute 'font-latex-sectioning-2-face nil :height 1.5)
              (set-face-attribute 'font-latex-sectioning-3-face nil :height 1.2)
              (set-face-attribute 'font-latex-sectioning-4-face nil :height 1.0)))
#+end_src

#+RESULTS: local-settings
| (lambda nil (set-face-attribute 'font-latex-sectioning-5-face nil :inherit nil :foreground #b58900) (set-face-attribute 'font-latex-sectioning-0-face nil :height 3) (set-face-attribute 'font-latex-sectioning-1-face nil :height 2) (set-face-attribute 'font-latex-sectioning-2-face nil :height 1.5) (set-face-attribute 'font-latex-sectioning-3-face nil :height 1.2) (set-face-attribute 'font-latex-sectioning-4-face nil :height 1.0)) | turn-off-auto-fill | turn-on-reftex |

** Local LaTeX settings
*** In-text Smart Quotes (XeLaTeX only)
    Redefine TeX-open-quote and TeX-close-quote to be smart quotes by default. Below, in the local org-mode settings, we'll also map the relevant function to a key we can use in org-mode, too. If you don't use XeLaTeX for processing all your =.tex= files, you should disable this option.

#+source: smart-quotes
#+begin_src emacs-lisp :tangle yes
  (setq TeX-open-quote "“")
  (setq TeX-close-quote "”")
#+end_src

#+RESULTS: smart-quotes
: ”

*** SyncTeX, PDF mode, Evince
Set up AUCTeX to work with the Evince PDF viewer.

#+srcname: sync
#+begin_src emacs-lisp :tangle yes
    ;; Synctex with Evince
    (add-hook 'TeX-mode-hook
    (lambda ()
    (add-to-list 'TeX-output-view-style
    '("^pdf$" "."
     "/usr/bin/evince  %n %o %b")))
     )

  (setq TeX-view-program-selection '((output-pdf "PDF Viewer")))
  (setq TeX-view-program-list
       '(("PDF Viewer" "/usr/bin/evince -b -g %n %o %b")))

    ;; Make emacs aware of multi-file projects
    ;; (setq-default TeX-master nil)

    ;; Auto-raise Emacs on activation (from Skim, usually)
;;    (defun raise-emacs-on-aqua()
;;    (shell-command "osascript -e 'tell application \"Emacs\" to activate' &"))
;;    (add-hook 'server-switch-hook 'raise-emacs-on-aqua)
#+end_src

#+RESULTS: sync
| PDF Viewer | /usr/bin/evince -b -g %n %o %b |


** Load Support Packages
*** Prettify Math in Buffers
#+source: latex-pretty-symbols 
#+begin_src emacs-lisp
;;  (require 'latex-pretty-symbols)
#+end_src

*** Load RefTeX
#+srcname: reftex-support
#+begin_src emacs-lisp 
  (add-hook 'LaTeX-mode-hook 'turn-on-reftex)   ; with AUCTeX LaTeX mode
  (add-hook 'pandoc-mode-hook 'turn-on-reftex)  ; with Pandoc mode
  (autoload 'reftex-mode     "reftex" "RefTeX Minor Mode" t)
  (autoload 'turn-on-reftex  "reftex" "RefTeX Minor Mode" t)
  (autoload 'reftex-citation "reftex-cite" "Make citation" t)
  (autoload 'reftex-index-phrase-mode "reftex-index" "Phrase mode" t)
  (add-hook 'LaTeX-mode-hook 'turn-on-reftex)   ; with AUCTeX LaTeX mode
  (add-hook 'latex-mode-hook 'turn-on-reftex)   ; with Emacs latex mode

  ;; Make RefTeX faster
  (setq reftex-enable-partial-scans t)
  (setq reftex-save-parse-info t)
  (setq reftex-use-multiple-selection-buffers t)
  (setq reftex-plug-into-AUCTeX t)

  ;; Make RefTeX work with Org-Mode
  ;; use 'C-c (' instead of 'C-c [' because the latter is already
  ;; defined in orgmode to the add-to-agenda command.
  (defun org-mode-reftex-setup ()
    (load-library "reftex") 
    (and (buffer-file-name)
    (file-exists-p (buffer-file-name))
    (reftex-parse-all))
    (define-key org-mode-map (kbd "C-c (") 'reftex-citation))

  (add-hook 'org-mode-hook 'org-mode-reftex-setup)

  ;; RefTeX formats for biblatex (not natbib), and for pandoc
  (setq reftex-cite-format
        '(
          (?\C-m . "\\cite[]{%l}")
          (?t . "\\textcite{%l}")
          (?a . "\\autocite[]{%l}")
          (?p . "\\parencite{%l}")
          (?f . "\\footcite[][]{%l}")
          (?F . "\\fullcite[]{%l}")
          (?P . "[@%l]")
          (?T . "@%l [p. ]")
          (?x . "[]{%l}")
          (?X . "{%l}")
          ))

  (setq font-latex-match-reference-keywords
        '(("cite" "[{")
          ("cites" "[{}]")
          ("footcite" "[{")
          ("footcites" "[{")
          ("parencite" "[{")
          ("textcite" "[{")
          ("fullcite" "[{") 
          ("citetitle" "[{") 
          ("citetitles" "[{") 
          ("headlessfullcite" "[{")))

  (setq reftex-cite-prompt-optional-args nil)
  (setq reftex-cite-cleanup-optional-args t)

#+end_src

#+RESULTS: reftex-support
: t

*** Load ebib
    ebib is a bibtex database manager that works inside emacs. It can
    talk to org-mode. See [[http://ebib.sourceforge.net/][the ebib project page]] for more. When Ebib is
    loaded, you can run it with =M-x ebib=.
  
#+source: ebib-load
#+begin_src emacs-lisp
  (autoload 'ebib "ebib" "Ebib, a BibTeX database manager." t)
  (setq ebib-preload-bib-files 
        '("/media/dgm/blue/documents/bibs/socbib.bib"))
  (add-hook 'LaTeX-mode-hook #'(lambda ()
          (local-set-key "\C-c v" 'ebib-insert-bibtex-key)))
#+end_src

#+RESULTS: ebib-load
| er/add-latex-mode-expansions | TeX-PDF-mode | (lambda nil (local-set-key  v 'ebib-insert-bibtex-key)) | turn-on-reftex |

** Configure AucTeX 
*** Automatic Parsing

#+source: autoparse
#+begin_src emacs-lisp
  (setq TeX-parse-self t) ; Enable parse on load.
  (setq TeX-auto-save t) ; Enable parse on save.
#+end_src

*** Use pdfLaTeX
    - Take this out to compile to DVI, instead.
#+srcname: pdf-mode
#+begin_src emacs-lisp 
      (add-hook 'LaTeX-mode-hook 'TeX-PDF-mode)
#+end_src

*** Configure Biber
Allow AucTeX to use biber as well as/instead of bibtex.
#+source: setup-biber
#+begin_src emacs-lisp
    ;; Biber under AUCTeX
    (defun TeX-run-Biber (name command file)
      "Create a process for NAME using COMMAND to format FILE with Biber." 
     (let ((process (TeX-run-command name command file)))
        (setq TeX-sentinel-function 'TeX-Biber-sentinel)
        (if TeX-process-asynchronous
            process
          (TeX-synchronous-sentinel name file process))))
    
    (defun TeX-Biber-sentinel (process name)
      "Cleanup TeX output buffer after running Biber."
      (goto-char (point-max))
      (cond
       ;; Check whether Biber reports any warnings or errors.
       ((re-search-backward (concat
                             "^(There \\(?:was\\|were\\) \\([0-9]+\\) "
                             "\\(warnings?\\|error messages?\\))") nil t)
        ;; Tell the user their number so that she sees whether the
        ;; situation is getting better or worse.
        (message (concat "Biber finished with %s %s. "
                         "Type `%s' to display output.")
                 (match-string 1) (match-string 2)
                 (substitute-command-keys
                  "\\\\[TeX-recenter-output-buffer]")))
       (t
        (message (concat "Biber finished successfully. "
                         "Run LaTeX again to get citations right."))))
      (setq TeX-command-next TeX-command-default))
  
  (eval-after-load "tex"
    '(add-to-list 'TeX-command-list '("Biber" "biber %s" TeX-run-Biber nil t :help "Run Biber"))
    )    

#+end_src

*** Use Biblatex key template by default in bib files
#+source: bibtex-dialect
#+begin_src emacs-lisp :tangle no
  (setq bibtex-dialect "BibTeX")
#+end_src

*** Use '-' as the separator in auto-generated bibtex keys
We use this (rather than the underscore character) for compatibilty with Pandoc.

#+source: bibtex-key-separator
#+begin_src emacs-lisp :tangle no
  (setq bibtex-autokey-titleword-separator "_")
  (setq bibtex-autokey-year-title-separator ":_")
#+end_src

*** Use latexmk for compilation by default

#+srcname: latemkdefault
#+begin_src emacs-lisp
    (eval-after-load "tex"
      '(add-to-list 'TeX-command-list '("latexmk" "latexmk -synctex=1 -shell-escape -pdf %s" TeX-run-TeX nil t :help "Process file with latexmk"))
      )
    (eval-after-load "tex"
      '(add-to-list 'TeX-command-list '("xelatexmk" "latexmk -synctex=1 -shell-escape -xelatex %s" TeX-run-TeX nil t :help "Process file with xelatexmk"))
      )

  (add-hook 'TeX-mode-hook '(lambda () (setq TeX-command-default "latexmk")))  
#+end_src

*** Set a Path to Executables (optional)
    - The location of the LaTeX excecutables is system
      dependent. AUCTeX calls everything through a shell, so you may
      or may not need this.  This source-code block is turned off by
      default as it should be added to the user's personal
      configuration as needed.
#+srcname: set-exec-path
#+begin_src emacs-lisp :tangle no
      (setenv "PATH" (concat "/usr/texbin:" (getenv "PATH")))
#+end_src

** Configure RefTeX
*** Default Bibliography
    - This is important when editing source code in Org-babel, since
      the LaTeX source code block being edited probably doesn't
      include the \bibliography{} command that RefTeX uses to find
      bibliographic database(s).  Make certain also that RefTeX has a
      path to the bibliographic databases.  This source-code block is
      turned off be default as it should be configured by the user in
      a personal file/directory.

#+srcname: default-bibliography
#+begin_src emacs-lisp :tangle no
  (setq reftex-default-bibliography
        (quote
         ("user.bib" "local.bib")))
#+end_src

 
* Final message
#+source: message-line
#+begin_src emacs-lisp
  (message "Starter Kit LaTeX loaded.")
#+end_src
