# -*- coding: utf-8 -*-
# -*- find-file-hook: org-babel-execute-buffer -*-

#+TITLE: Starter Kit Latex-Org combination
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter Kit Latex-Org combination
** Use latexmk for compilation by default

NB (11 Jan 21): Quito =-bibtex= de <xelatex> porque en compilation me dice <xelatex: unrecognized option '-bibtex'>.

Sin <-bibtex> obtengo:

#+BEGIN_EXAMPLE
Running 'xelatex -bibtex -file-line-error --shell-escape -synctex=1  -recorder  "metodos-mills.tex"'
#+END_EXAMPLE

#+srcname: latemkdefault
#+begin_src emacs-lisp :tangle yes

    (eval-after-load "tex"
      '(add-to-list 'TeX-command-list '("latexmk" "latexmk -bibtex -synctex=1 -shell-escape -pdf %s" TeX-run-TeX nil t :help "Process file with latexmk")))

    (eval-after-load "tex"
      '(add-to-list 'TeX-command-list '("xelatexmk" "latexmk -synctex=1 -shell-escape -xelatex %s" TeX-run-TeX nil t :help "Process file with xelatexmk")))

  (add-hook 'TeX-mode-hook '(lambda () (setq TeX-command-default "latexmk")))  

#+end_src

#+RESULTS: latemkdefault
| visual-fill-column-mode | turn-on-visual-line-mode | (lambda nil (setq TeX-command-default latexmk)) |

** Choosing =pdflatex= or =xelatex=

I found the solution here, hurray!!!: https://stackoverflow.com/questions/47623041/getting-emacs-spacemacs-to-accept-function-that-changes-latex-compiler-based-u/47626494#47626494

I have added =-bibtex -f=, which I had in my original =(setq org-latex-pdf-process (list "latexmk -synctex=1 -shell-escape -bibtex -f -pdf %f"))=. 

Summary: with this setup I can now easily export to LaTeX, XeLaTeX and also Beamer.

#+begin_src emacs-lisp :tangle yes

(defun my-auto-tex-cmd (backend)
  "When exporting from .org with latex,
  automatically run latex, pdflatex, or xelatex as appropriate,
  using latexmk."
  (let ((texcmd))
    (setq texcmd "latexmk -bibtex -f -pdf %f")
    (if (string-match "LATEX_CMD: pdflatex" (buffer-string))
        (progn
          (setq texcmd "latexmk -pdf -pdflatex='pdflatex -file-line-error --shell-escape -synctex=1 -bibtex -f' %f")))
    (if (string-match "LATEX_CMD: xelatex" (buffer-string))
        (progn
          (setq texcmd "latexmk -pdflatex='xelatex -file-line-error --shell-escape -synctex=1' -pdf %f")))  ;;  -bibtex -f between -synctex=1 and ' taken out as they were not recognised according to the log file. DGM 11 Jan 21 added <bibtex> and got <xelatex: unrecognized option '-bibtex'> in the log file

    (setq org-latex-pdf-process (list texcmd))))
(add-hook 'org-export-before-parsing-hook 'my-auto-tex-cmd)

#+end_src

#+RESULTS:
| org-ref-acronyms-before-parsing | org-ref-glossary-before-parsing | my-auto-tex-cmd | org-latex-header-blocks-filter |


** TOC 
Turn off the default toc behavior; deal with it properly in headers to files.

#+BEGIN_SRC emacs-lisp :tangle yes

(defun org-latex-no-toc (depth)  
  (when depth
      (format "%% Org-mode is exporting headings to %s levels.\n"
              depth)))

(setq org-latex-format-toc-function 'org-latex-no-toc)

#+END_SRC

#+RESULTS:
: org-latex-no-toc


** Default packages

#+BEGIN_SRC emacs-lisp :tangle yes

(setq org-latex-default-packages-alist nil)     
;; (setq org-latex-packages-alist
;;        '(("minted" "org-preamble-xelatex" t)
;;          ("" "graphicx" t)
;;          ("" "longtable" nil)
;;          ("" "float" ))) 

   #+END_SRC

   #+RESULTS:

* Style of Memoir Class

Now I define the style of memoir-class articles and others. Note the insertion of the =\input= statement for the vc information (now deleted as I include it in the skeleton for XeLaTeX outputs)

DGM 12 dic 2019: note that ="\\usepackage[minted]{org-preamble-xelatex}\n"= cannot go here below ="memarticle"= because the processs would output it after =\begin{document}=.

DGM 19 april 2020: Originally, I thought these were settings for XeLaTeX only but now I think they work for both pdflatex and xelatex.

Originally it had: ="\\documentclass[11pt,oneside,a4paper,article]{memoir}\n"= but I include the options in the skeleton, so I guess I don't need them.


#+BEGIN_SRC emacs-lisp :tangle yes
(add-to-list 'org-latex-classes
               '("memarticle"
                 "\\documentclass{memoir}\n"
                  ("\\section{%s}" . "\\section*{%s}")
                  ("\\subsection{%s}" . "\\subsection*{%s}")
                  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                  ("\\paragraph{%s}" . "\\paragraph*{%s}")
                  ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

(add-to-list 'org-latex-classes
               '("membook"
                 "\\documentclass{memoir}\n"
                 ("\\chapter{%s}" . "\\chapter*{%s}")
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")))
 #+END_SRC

 #+RESULTS:
 | membook | \documentclass[11pt,oneside]{memoir} |

Default packages included in the tex file. As before, =org-preamble-xelatex= is part of =latex-custom-kjh=. There's =org-preamble-pdflatex= as well, if you wish to use that instead.
DGM note: This code calls on the stuff in the =~/texmf= directory that allows using fonts a la MinionPro etc. Specifically, it uses the =org-preamble-xelatex= style file. 
DGM note on 13 may: I'ved tangled to no as this conflicted with my export to beamer. Now I have included these lines in the =org-skeleton= code.
Things I've learnt today that are key: =org export=  inputs a whole bunch of packages that maybe it's not what you wanted and some of them may conflict with packages you do want to have. To get rid of them you need =(gsetq org-latex-default-packages-alist nil)=

Then, if I uncomment the rest I'll have the call to =org-preamble-xelatex= in every latex file but it happens that this call is great for articles but not for beamer presentations. So I have disabled it here and I have added to the skeleton template. By the way, I also need a beamer skeleton!

#+BEGIN_SRC emacs-lisp :tangle yes
 (setq org-latex-default-packages-alist nil)     
;; (setq org-latex-packages-alist
;;        '(("minted" "org-preamble-xelatex" t)
;;          ("" "graphicx" t)
;;          ("" "longtable" nil)
;;          ("" "float" ))) 
   #+END_SRC

   #+RESULTS:

   #+RESULTS: orgmode-latex-export
   : ox-latex


* Latex Math Notation in Org

DGM on 10 Dic 2019: I've kind of forgotten what this was all about, but I think it is about the rendering of math notation in org-mode buffers with =C-c C-x C-l=

From https://tex.stackexchange.com/questions/78501/change-size-of-the-inline-image-for-latex-fragment-in-emacs-org-mode and  https://www.youtube.com/watch?v=88Mid7B31YQ&list=PLKNjNbxhXaeA57E5uJldm-vW_qfxeF6Gy&index=3

Fuller explanation here https://www.reddit.com/r/emacs/comments/9h44lk/i_can_finally_preview_latex_in_orgmode_took_me/

and issue of foreground not working addressed here: https://emacs.stackexchange.com/questions/22607/background-color-of-latex-fragments-in-org-mode/44693#44693

This is what solved the issue in the end!!! 

or look for =change foreground in "org-format-latex-options"= in google.

#+BEGIN_SRC emacs-lisp :tangle yes

;; fix color handling in org-preview-latex-fragment
(let ((dvipng--plist (alist-get 'dvipng org-preview-latex-process-alist)))
  (plist-put dvipng--plist :use-xcolor t)
  (plist-put dvipng--plist :image-converter '("dvipng -D %D -T tight -o %O %f")))

;; bigger latex fragment
(setq org-format-latex-options (plist-put org-format-latex-options :scale 4))
(setq org-format-latex-options (plist-put org-format-latex-options :foreground "grey"))
;;(setq org-format-latex-options (plist-put org-format-latex-options :html-foreground "grey"))
;;(setq org-format-latex-options (plist-put org-format-latex-options :background "grey"))

#+END_SRC

#+RESULTS:
| :foreground | grey | :background | grey | :scale | 4 | :html-foreground | red | :html-background | Transparent | :html-scale | 1.0 | :matchers | (begin $1 $ $$ \( \[) |

Pending: how to change font locking for formulas with this preview. 

* Setting =hyperref= in org-mode

From https://emacs.stackexchange.com/questions/12878/how-to-change-style-of-hyperlinks-within-pdf-published-from-org-mode-document

By default, Org mode adds a rather unhelpful hypersetup section. You can prevent this addition by adding the following line to your .emacs file:

#+BEGIN_SRC emacs-lisp :tangle yes

(customize-set-value 'org-latex-with-hyperref nil)

#+END_SRC

#+RESULTS:

* Org-tufte class

#+begin_src emacs-lisp :tangle yes

(require 'ox-tufte-latex)

#+end_src

#+RESULTS:
: ox-tufte-latex

* Provide

#+BEGIN_SRC emacs-lisp  :tangle yes
(provide 'starter-kit-latex-org)
#+END_SRC

* Final message
#+source: message-line
#+begin_src emacs-lisp :tangle yes
  (message "Starter Kit LaTeX-Org loaded.")
#+end_src

#+RESULTS: message-line
: Starter Kit LaTeX-Org loaded.
