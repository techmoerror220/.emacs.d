# -*- coding: utf-8 -*-
# -*- find-file-hook: org-babel-execute-buffer -*-

#+TITLE: Starter Kit Polymode
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]]. 

This file provides settings for Polymode

* Markdown 
Polymode is a package that supports multiple modes inside a single buffer. It is aimed particularly at literate programming approaches and supports, e.g., R and markdown in a single =.Rmd= file. So it is very useful with knitr in R.

#+source: markdown
#+begin_src emacs-lisp :tangle yes :results silent
  (use-package markdown-mode
    :ensure t
    :mode
    (("README\\.md\\'" . gfm-mode)
     ("\\.md\\'" . markdown-mode)
     ("\\.markdown\\'" . markdown-mode)
     ("\\.Rmd\\'" . markdown-mode)
     ("\\.rmd\\'" . markdown-mode)
     ("\\.Rmw\\'" . markdown-mode))
    :init
    (setq markdown-command "markdown")
    ;; DGM trying to make line-move-visual work with visual lines rather than logical lines (nil) (manual, p.19)
    (setq line-move-visual t)
    )

  ;; Add yaml to markdown an .yml files
  (use-package yaml-mode
    :ensure t
    :mode (("\\.yml\\'" . yaml-mode)))
#+end_src

** Add a Keyboard Shortcut for the Pipe Operator

Assignment in ESS is shift-minus; by extension we'll use M-shift-minus for inserting the `%>%` operator.

#+src-name: ess-pipe-shortcut
#+begin_src emacs-lisp :tangle yes :results silent

(defun my_pipe_operator ()
  "R/ESS %>% operator"
  (interactive)
  (just-one-space 1)
  (insert "%>%")
  (reindent-then-newline-and-indent))
(define-key ess-mode-map (kbd "C->") 'my_pipe_operator)
(define-key inferior-ess-mode-map (kbd "C->") 'my_pipe_operator) 
#+end_src

** Add a Keyboard Shortcut for Rmd chunks

#+src-name: rmd-chunk-insert
#+BEGIN_SRC emacs-lisp :tangle yes :results silent

;;;Insert new chunk for Rmarkdown
(defun kjh-insert-r-chunk (header) 
  "Insert an r-chunk in markdown mode." 
  (interactive "sLabel: ") 
  (insert (concat "```{r " header "}\n\n```")) 
  (forward-line -1))

(global-set-key (kbd "C-c i") 'kjh-insert-r-chunk)
#+END_SRC

** Markdown Mode Support

DGM: Don't know what this auto-mode is. Need to learn it someday.

#+srcname: markdown-mode
#+begin_src emacs-lisp :tangle yes :results silent
      (autoload 'markdown-mode "markdown-mode"
      "Major mode for editing Markdown files" t)
      (setq auto-mode-alist
      (cons '("\\.Markdown" . markdown-mode) auto-mode-alist)
      )
      (setq auto-mode-alist
      (cons '("\\.MarkDown" . markdown-mode) auto-mode-alist)
      )
      (setq auto-mode-alist
      (cons '("\\.markdown" . markdown-mode) auto-mode-alist)
      )
      (setq auto-mode-alist
      (cons '("\\.md" . markdown-mode) auto-mode-alist)
      )
      (setq auto-mode-alist
      (cons '("README\\.md" . gfm-mode) auto-mode-alist)
      )

   ;; This function will open Marked.app and monitor the current markdown document
   ;; for anything changes.  In other words, it will live reload and convert the
   ;; markdown documment
   ;; DGM comments this out as this Marked.app is for Mac Os
;;   (defun markdown-preview-file ()
;;     "run Marked on the current file and revert the buffer"
;;     (interactive)
;;     (shell-command
;;      (format "open -a /Applications/Marked\\ 2.app %s"
;;              (shell-quote-argument (buffer-file-name))))
;;     )  
;;   (global-set-key "\C-co" 'markdown-preview-file) 

 (add-hook 'markdown-mode-hook 'latex-unicode-simplified)

#+end_src

** RefTeX in Markdown Mode

From: https://gist.github.com/kleinschmidt/5ab0d3c423a7ee013a2c01b3919b009a, the Kleinschmidt (doesn't work)
- https://github.com/jrnold/emacs-dot-files/blob/master/lisp/init-markdown.el

Define markdown citation formats:

#+begin_src emacs-lisp :tangle yes :results silent
(defvar markdown-cite-format)
(setq markdown-cite-format
      '(
        (?\C-m . "[@%l]")
        (?p . "[@%l]")
        (?t . "@%l")
        )
      )
#+end_src

#+RESULTS:
: ((13 . [@%l]) (112 . [@%l]) (116 . @%l))


Wrap =reftex-citation= with local variables for markdown format:

#+begin_src emacs-lisp :tangle yes :results silent
(defun markdown-reftex-citation ()
  (interactive)
  (let ((reftex-cite-format markdown-cite-format)
        (reftex-cite-key-separator "; @"))
    (reftex-citation)))
#+end_src

#+RESULTS:
: markdown-reftex-citation

Bind modified reftex-citation to =C-c [=, without enabling =reftex-mode=:
(see: https://www.gnu.org/software/auctex/manual/reftex/Citations-Outside-LaTeX.html#SEC31)
(DGM: this binding does not work. But calling on =markdown-reftex-citation= interactively works.)

#+begin_src emacs-lisp :tangle yes :results silent
(add-hook
 'markdown-mode-hook
 (lambda ()
   (define-key markdown-mode-map "\C-c [" 'markdown-reftex-citation)))
#+end_src

* Local Pandoc Support

A pandoc menu for markdown and tex files.

#+src-name: pandoc_mode
#+begin_src emacs-lisp :tangle yes :results silent
  (use-package pandoc-mode
    :ensure t
    :config
    (add-hook 'markdown-mode-hook 'pandoc-mode)
    (add-hook 'TeX-mode-hook 'pandoc-mode)  
    (add-hook 'org-mode-hook 'pandoc-mode)
    (add-hook 'pandoc-mode-hook 'pandoc-load-default-settings))
  ;; (global-set-key (kbd "C-c C-p") 'pandoc-main-hydra/body) ;; not sure it is taken
#+end_src

#+RESULTS:
: #s(hash-table size 65 test eql rehash-size 1.5 rehash-threshold 0.8125 data (:use-package (24183 46334 164638 301000) :init (24183 46334 164624 693000) :config (24183 46334 164356 613000) :config-secs (0 0 468 902000) :init-secs (0 0 1027 418000) :use-package-secs (0 0 1110 6000)))


* Polymode 

Trying to work with markdown only, as polymode is too slow

#+source: Polymode
#+begin_src emacs-lisp :tangle no :results silent
  (use-package polymode
    :ensure markdown-mode
    :ensure poly-R
    :ensure poly-noweb
    :config
    ;; R/tex polymodes
    (add-to-list 'auto-mode-alist '("\\.Rnw" . poly-noweb+r-mode))
    (add-to-list 'auto-mode-alist '("\\.rnw" . poly-noweb+r-mode))
    (add-to-list 'auto-mode-alist '("\\.Rmd" . poly-markdown+r-mode))
    ;; org-mode poly (not working at the moment)
    ;; (add-to-list 'auto-mode-alist '("\\.org" . poly-org-mode))
    ;; Make sure r-mode is loaded
    ;; (autoload 'r-mode "ess-site.el" "Major mode for editing R source." t)
    ;; Add a chunk for rmarkdown
    ;; Need to add a keyboard shortcut
    ;; https://emacs.stackexchange.com/questions/27405/insert-code-chunk-in-r-markdown-with-yasnippet-and-polymode
    ;; (defun insert-r-chunk (header) 
    ;;   "Insert an r-chunk in markdown mode. Necessary due to interactions between polymode and yas snippet" 
    ;;   (interactive "sHeader: ") 
    ;;   (insert (concat "```{r " header "}\n\n\n```")) 
    ;;   (forward-line -2))
    ;; (define-key poly-markdown+r-mode-map (kbd "M-c") #'insert-r-chunk)
    )


  (use-package poly-markdown
    :ensure polymode
    :defer t
    )

;;  Originally, the above had: 
;;  :config
;;  ;; Wrap lines at column limit, but don't put hard returns in
;;  (add-hook 'markdown-mode-hook (lambda () (visual-line-mode -1)))
;;  ;; Flyspell on
;;  (add-hook 'markdown-mode-hook (lambda () (flyspell-mode -1))) 
;;  ;; Add highligh-symbol 
;;  (add-hook 'markdown-mode-hook (lambda () (highlight-symbol-mode 1)))  ;; now in =dgm.org=

  ;; poly-R
  (use-package poly-R
    :ensure polymode
    :ensure poly-markdown
    :ensure poly-noweb
    :defer t
  )

;; Originally the above had:
    ;; :config
    ;; Add a chunk for rmarkdown
    ;; Need to add a keyboard shortcut
    ;; https://emacs.stackexchange.com/questions/27405/insert-code-chunk-in-r-markdown-with-yasnippet-and-polymode
    ;; (defun insert-r-chunk (header) 
    ;;   "Insert an r-chunk in markdown mode. Necessary due to interactions between polymode and yas snippet" 
    ;;   (interactive "sHeader: ") 
    ;;   (insert (concat "```{r " header "}\n\n\n```")) 
    ;;   (forward-line -2))
    ;; (define-key poly-markdown+r-mode-map (kbd "M-c") #'insert-r-chunk)
#+end_src


* Provide
#+begin_src emacs-lisp :tangle yes :results silent
(provide 'starter-kit-polymode)
#+end_src

#+RESULTS:
: starter-kit-stats

* Final message
#+source: message-line
#+begin_src emacs-lisp :tangle yes :results silent
  (message "Starter Kit Polymode file loaded.")
#+end_src
